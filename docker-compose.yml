services:
  database:
    image: mongo:latest
    container_name: workcodile-mongo
    ports:
      - "27018:27017"
    volumes:
      - ./data:/data/db
    networks:
      - workcodile-net

  backend:
    build:
      context: ./backend
    container_name: workcodile-backend
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app # Monta el código para desarrollo en tiempo real
      - /app/node_modules # No montar node_modules locales
    depends_on:
      - database
      - minio
    environment:
      - MONGO_URI=${MONGO_URI}
      - PORT=${PORT}
      - JWT_SECRET=${JWT_SECRET}
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
      - MINIO_PUBLIC_ENDPOINT=localhost
    networks:
      - workcodile-net
    command: >
      sh -c "npm install && npm run dev"

  frontend:
    build:
      context: ./frontend
    container_name: workcodile-frontend
    ports:
      - "8080:80" # Expone el Nginx en el puerto 8080
    volumes:
      - ./frontend/src:/app/src # Monta el código para desarrollo en tiempo real
    depends_on:
      - backend
    networks:
      - workcodile-net

  minio:
    image: minio/minio:latest
    container_name: workcodile-minio
    ports:
      - "9000:9000" # API
      - "9001:9001" # Consola Web
    volumes:
      - ./minio_data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    command: server /data --console-address ":9001"
    networks:
      - workcodile-net

networks:
  workcodile-net:
    driver: bridge
